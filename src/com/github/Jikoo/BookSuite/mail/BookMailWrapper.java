/*******************************************************************************
 * Copyright (c) 2013 Ted Meyer
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Adam Gunn - plugin surrounding libraries
 ******************************************************************************/
package com.github.Jikoo.BookSuite.mail;

import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.meta.BookMeta;

public class BookMailWrapper {
	/*
	 * The structure for a letter or package is as follows:
	 * 
	 * Title: letter (case insensitive) -or- package (case insensitive)
	 * 
	 * Author: Sender
	 * 
	 * Page 1: To
	 * 
	 * Page 2: (optional, though must be blank for sending items) Associated
	 * Message
	 * 
	 * Page 3: (optional) Item Names
	 * 
	 * Page 4: Generated by us. Anything the sender puts here is erased, and we
	 * populate with data. Apon reading of the letter, this data is accessed by
	 * us, to check if the user has send items If those items fit in the
	 * inventory, add them, remove this page, and add the items, else show
	 * message to user telling them that the items cannot be added and they
	 * should increase their inventory free space
	 */

	private BookMeta bm;

	private boolean letter = false;
	private boolean pack = false;

	private String sender;
	private String adressee;

	public BookMailWrapper(BookMeta bm) {
		this.bm = bm;
		this.sender = bm.getAuthor();
		this.letter = "letter".equalsIgnoreCase(bm.getTitle());
		this.pack = "package".equalsIgnoreCase(bm.getTitle());
	}

	public String getAdressee() {
		if (this.adressee == null) {
			this.adressee = this.bm.getPage(1).toString();
		}
		return this.adressee;
	}

	public boolean isLetter() {
		return this.letter;
	}

	public boolean isPackage() {
		return this.pack;
	}

	public String getSender() {
		return this.sender;
	}

	public BookMeta getAllMeta() {
		return this.bm;
	}

	/*
	 * The structure for an Item Meta is as follows:
	 * 
	 * 
	 * MATERIAL_ID : ITEM_NAME : ENCHANTMENT_ID;ENCHANTMENT_LEVEL :
	 * ENCHANTMENT_ID;ENCHANTMENT_LEVEL etc
	 */
	@SuppressWarnings("unused")
	private Inventory getInventoryBySerializedIDs(String serial) {
		return null;
	}
}
